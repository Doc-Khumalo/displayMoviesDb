{"version":3,"sources":["modules/reducer.js","modules/type.js","modules/index.js","config.js","MoviesDisplay/MoviesDisplay.component.js","Movies/Movies.component.js","helpers/axiosGetHelper.js","modules/actions.js","Movies/Movies.container.js","App.js","serviceWorker.js","index.js"],"names":["initialState","movies","genres","genresFilters","tempMovieArr","tempMovieId","images","genreDisplay","rating","reducer","state","arguments","length","undefined","action","payloadData","payload","type","Object","objectSpread","toConsumableArray","genreDisplayTemp","map","item","push","value","id","label","name","concat","movieRatings","filter","Math","round","vote_average","x","every","y","genre_ids","includes","movieDataId","Set","combineReducers","config","apiUrl","apiKey","apiUrlGenres","apiImages","header","filterTextHeader","filterText","genreDefaultValue","ratingDefaultValue","options","MoviesDisplay","props","react_default","a","createElement","className","i","Fragment","key","title","overview","src","secure_base_url","poster_path","alt","genre","j","genIds","k","WeatherContainer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFilter","e","setFilter","filterItems","filterItemsSort","setState","handleFilterRatings","selectedOption","setRating","handleSort","moviesSort","sort","b","parseFloat","popularity","sortedMovies","showRatingsFilter","API_KEY","process","getData","_this$props","react_select_esm","placeholder","closeMenuOnSelect","components","makeAnimated","isMulti","onChange","MoviesDisplay_component","React","Component","axiosGetHelper","url","params","axios","get","setMovies","setMovieImages","setGenres","mapDispatchToProps","moviesUrl","genresUrl","imagesUrl","dispatch","getHelper","then","response","data","results","catch","error","Error","getGenres","getMovieImages","connect","filterRatingOptions","Weather","App","Movies_container","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewareList","thunk","enhancer","applyMiddleware","apply","store","createStore","container","document","getElementById","ReactDOM","render","react_redux_es","src_App_0","URL","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6d8dfb55.chunk.js","sourcesContent":["import {\n  SET_MOVIES,\n  SET_GENRES,\n  SET_FILTER,\n  SET_RATING,\n  SET_IMAGES,\n} from './type';\n\nconst initialState = {\n  movies: [],\n  genres: [],\n  genresFilters: [],\n  tempMovieArr: [],\n  tempMovieId: [],\n  images: [],\n  genreDisplay: [],\n  rating: 0\n};\n\nconst reducer = (state = initialState, action) => {\n  let payloadData = action.payload;\n\n  switch (action.type) {\n\n    case SET_MOVIES:\n    return {\n      ...state,\n      movies: [ ...payloadData ],\n      tempMovieArr: [ ...payloadData ]\n    };\n\n    case SET_GENRES:\n      let genreDisplayTemp = [];\n\n      payloadData.map(item => genreDisplayTemp.push({ value: item.id, label: item.name }));\n\n      return {\n        ...state,\n        genres: [ ...payloadData ],\n        genreDisplay: [ ...genreDisplayTemp ]\n      };\n\n    case SET_RATING:\n      // get movies with selected rating\n      let movieRatings = state.tempMovieArr.filter(item => Math.round(item.vote_average) >= payloadData.map(item => item.value));\n\n      //get movies with selected rating and filter\n      movieRatings = state.tempMovieId.length > 0 ? movieRatings.filter(x => state.tempMovieId.every(y => x.genre_ids.includes(y))) : movieRatings;\n\n      return {\n        ...state,\n        movies: movieRatings,\n        rating: payloadData.map(item => item.value)\n      };\n\n    case SET_IMAGES:\n      return {\n        ...state,\n        images: payloadData\n      };\n\n    case SET_FILTER:\n      let movieDataId = [];\n\n      // update filters with incoming payload id's\n      payloadData.map(item => movieDataId.push(item.id));\n\n      // clean up any duplicates found\n      movieDataId = [ ...new Set(movieDataId) ];\n\n      let movies = state.tempMovieArr.filter(x => movieDataId.every(y => x.genre_ids.includes(y)));\n      movies = movies.filter(item => Math.round(item.vote_average) >= state.rating);\n\n      return {\n        ...state,\n        genres: [ ...state.genres ],\n        tempMovieId: movieDataId,\n        movies\n      };\n\n    default: return state;\n  }\n};\n\nexport default reducer;","export const SET_MOVIES = 'weatherApp/SET_MOVIES';\nexport const SET_GENRES = 'weatherApp/SET_GENRES';\nexport const SET_FILTER = 'weatherApp/SET_FILTER';\nexport const SET_IMAGES = 'weatherApp/SET_IMAGES';\nexport const SET_RATING = 'weatherApp/SET_RATING';","import { combineReducers } from 'redux';\nimport reducer from './reducer';\n\nexport default combineReducers({ reducer });","export default {\n  apiUrl: apiKey => `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}`,\n  apiUrlGenres: apiKey => `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}`,\n  apiImages: apiKey => `https://api.themoviedb.org/3/configuration?api_key=${apiKey}`,\n  header: 'Movie listings',\n  filterTextHeader: 'No movies matched filter criteria',\n  filterText: 'Consider adjusting filters',\n  genreDefaultValue: 'Select genres',\n  ratingDefaultValue: 'Minimum rating',\n  options: [\n    { value: 1, label: 'One' },\n    { value: 2, label: 'Two' },\n    { value: 3, label: 'Three' },\n    { value: 4, label: 'Four' },\n    { value: 5, label: 'Five' },\n    { value: 6, label: 'Six' },\n    { value: 7, label: 'Seven' },\n    { value: 8, label: 'Eight' },\n    { value: 9, label: 'Nine' }\n  ]\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MoviesDisplay = props => {\n  const {\n    movies,\n    genres,\n    images\n  } = props;\n\n\n  return (\n    <div className=\"movies-wrapper\">\n      <ul className='row'>\n        {movies.map((item, i) => {\n          return (\n            <React.Fragment key={i}>\n              <li className='movies-item col'>\n                <header className='hover-text'>\n                  <p><span className='sub-text'>{item.title}</span></p>\n                  <div className=\"description-wrapper\">\n                      {item.overview}\n                  </div>\n                </header>\n                <img src={`${images.secure_base_url}w780${item.poster_path}`}  alt=''/>\n                <div className=\"rating-details\">\n                  {genres.length > 0 &&\n                    <React.Fragment>\n                      {genres.map((genre, j) => {\n                        return (\n                          <React.Fragment key={j}>\n                            {item.genre_ids.map((genIds, k) => {\n                              return (\n                                <React.Fragment key={k}>\n                                  {genIds === genre.id &&\n                                    <span className='genre'>\n                                      {genre.name}\n                                    </span>\n                                  }\n                                </React.Fragment>\n                              )\n                            })}\n                          </React.Fragment>\n                        )\n                      })}\n                    </React.Fragment>\n                  }\n                </div>\n              </li>\n            </React.Fragment>\n          )\n        })}\n      </ul>\n    </div>\n  )\n};\n\nexport default MoviesDisplay;\n\nMoviesDisplay.propTypes = {\n  movies: PropTypes.instanceOf(Array).isRequired,\n  genres: PropTypes.instanceOf(Array).isRequired,\n  images: PropTypes.instanceOf(Object).isRequired\n};","import React  from 'react';\nimport MoviesDisplay  from '../MoviesDisplay/MoviesDisplay.component';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/lib/animated';\nimport './Movies.css';\nimport config from '../config';\n\nclass WeatherContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortedMovies: [],\n      showRatingsFilter: false,\n      selectedOption: 'Minimum rating',\n      filterItems: []\n    };\n  }\n\n  componentDidMount() {\n    const { getData } = this.props;\n    const API_KEY = process.env.REACT_APP_MOVIES_API_KEY;\n\n    //get all apis\n    getData(config.apiUrl(API_KEY), config.apiUrlGenres(API_KEY), config.apiImages(API_KEY));\n  }\n\n  handleFilter = e => {\n    const { setFilter } = this.props;\n    const { filterItems } = this.state;\n    let filterItemsSort = [];\n\n    e.map(item => filterItemsSort.push({ id: item.value, name: item.label }));\n\n    if (filterItems.length > 0) {\n      this.setState({ filterItems: [ ...e ]});\n      setFilter(filterItemsSort);\n    } else {\n      this.setState({ filterItems: [ ...e ]});\n      setFilter(filterItemsSort);\n    }\n\n  };\n\n  handleFilterRatings = selectedOption => {\n    const { setRating } = this.props;\n    this.setState({ selectedOption });\n    setRating([ selectedOption ])\n  };\n\n  handleSort = moviesSort => moviesSort.length > 0 ? moviesSort.sort((a, b) =>\n    parseFloat(b.popularity) - parseFloat(a.popularity)) : [];\n\n  render() {\n    const { movies, genresFilters, images, genreDisplay, genres } = this.props;\n    const { selectedOption } = this.state;\n\n    // call method to perfom sort by popularity\n    const sortedMovies = this.handleSort(movies);\n\n    return [\n      <section className='container'>\n        <div className='row filter-wrapper'>\n          {genreDisplay.length > 0 &&\n            <div className='col'>\n              <Select\n                placeholder={config.genreDefaultValue}\n                closeMenuOnSelect={false}\n                components={makeAnimated()}\n                isMulti\n                options={genreDisplay}\n                onChange={this.handleFilter}\n              />\n            </div>\n          }\n          <div className='col'>\n            <Select placeholder={config.ratingDefaultValue} value={selectedOption} onChange={this.handleFilterRatings} options={config.options}/>\n          </div>\n        </div>\n        {sortedMovies.length > 0 ? (\n          <MoviesDisplay genres={genres} movies={sortedMovies} images={images}/>\n           ) :\n          (\n            <React.Fragment>\n              {genresFilters.length > 0 &&\n              <div className='container'>\n                <h4>{config.filterTextHeader}</h4>\n                <p>{config.filterText}</p>\n              </div>\n              }\n            </React.Fragment>\n          )\n        }\n      </section>\n    ];\n  }\n}\n\nexport default WeatherContainer;","import axios from 'axios';\n\n/*\n    axios get function;\n    returns a promise to be handled inside parent component\n\n    ******************** Usage ****************************\n    import helper and pass url plus parameter to be sent\n* */\n\n\nexport default (url, params) => axios.get(url, { params } )","import getHelper from '../helpers/axiosGetHelper';\nimport {\n  SET_MOVIES,\n  SET_GENRES,\n  SET_IMAGES,\n  SET_FILTER,\n  SET_RATING\n} from './type';\n\nexport const getMovies = url => {\n  return (dispatch) => {\n\n    getHelper(url)\n      .then(response => {\n        dispatch(setMovies(response.data.results))\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }\n};\n\nexport const getGenres = url => {\n  return (dispatch) => {\n\n    getHelper(url)\n      .then(response => {\n        dispatch(setGenres(response.data.genres))\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }\n};\n\nexport const getMovieImages = url => {\n  return (dispatch) => {\n\n    getHelper(url)\n      .then(response => {\n        dispatch(setMovieImages(response.data.images))\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }\n};\n\nexport const setMovies = payload => ({\n  type: SET_MOVIES,\n  payload\n});\n\nexport const setMovieImages = payload => ({\n  type: SET_IMAGES,\n  payload\n});\n\nexport const setFilter = payload => ({\n  type: SET_FILTER,\n  payload\n});\n\nexport const setRating = payload => ({\n  type: SET_RATING,\n  payload\n});\n\nexport const setGenres = payload => ({\n  type: SET_GENRES,\n  payload\n});\n\nexport const getData = (moviesUrl, genresUrl, imagesUrl) => {\n  return (dispatch) => {\n    dispatch(getMovies(moviesUrl));\n    dispatch(getGenres(genresUrl));\n    dispatch(getMovieImages(imagesUrl));\n  }\n};","import { connect } from 'react-redux';\nimport Weather from './Movies.component';\nimport { getData, setFilter, setRating } from '../modules/actions';\n\nconst mapDispatchToProps = {\n  getData,\n  setFilter,\n  setRating\n};\n\nconst mapStateToProps = (state) => ({\n  movies: state.reducer.movies,\n  genres: state.reducer.genres,\n  genreDisplay: state.reducer.genreDisplay,\n  filterRatingOptions: state.reducer.filterRatingOptions,\n  images: state.reducer.images,\n  genresFilters: state.reducer.genresFilters\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather);","import React, { Component } from 'react';\nimport config from './config';\nimport './App.css';\nimport Movies from './Movies/Movies.container';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h1 className='header-wrapper'>{config.header}</h1>\n        </header>\n        <Movies />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport * as thunk from 'redux-thunk';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport reducer from './modules/index'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport logger from 'redux-logger';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middlewareList = process.env.NODE_ENV === 'development' ? [thunk.default, logger] : [thunk.default];\nconst enhancer = composeEnhancers(applyMiddleware(...middlewareList));\n\nconst store = createStore(reducer, enhancer);\nconst container = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, container\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}